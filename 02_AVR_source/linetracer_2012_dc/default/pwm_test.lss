
pwm_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000011a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  0000016e  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000028  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000a4  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000070  00000000  00000000  0000025a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000139  00000000  00000000  000002ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  00000404  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000a9  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e1       	ldi	r30, 0x1A	; 26
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  b6:	0c 94 8b 00 	jmp	0x116	; 0x116 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <main>:

}

void init_PWM(void) {
	
	DDRB = 0xF0;
  be:	80 ef       	ldi	r24, 0xF0	; 240
  c0:	87 bb       	out	0x17, r24	; 23
	
	TCCR0 = 0x6F;
  c2:	8f e6       	ldi	r24, 0x6F	; 111
  c4:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0xFF;
  c6:	9f ef       	ldi	r25, 0xFF	; 255
  c8:	92 bf       	out	0x32, r25	; 50
	OCR0 = 0x00;
  ca:	11 be       	out	0x31, r1	; 49

int main(void) {

	init_PWM();
       
	DDRC = 0xC0;
  cc:	80 ec       	ldi	r24, 0xC0	; 192
  ce:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF;
  d0:	91 bb       	out	0x11, r25	; 17

	PORTC = 0x3F;
  d2:	8f e3       	ldi	r24, 0x3F	; 63
  d4:	85 bb       	out	0x15, r24	; 21
	PORTD = 0x00;
  d6:	12 ba       	out	0x12, r1	; 18

	while(1) {

		if(PINC == 0x3E) {
			PORTD = 0x04;
  d8:	54 e0       	ldi	r21, 0x04	; 4
			PORTD = 0x08;
			OCR0 = 0x40;

		}
		else if(PINC == 0x3B) {
			PORTD = 0x10;
  da:	40 e1       	ldi	r20, 0x10	; 16
			OCR0 = 0xFF;
  dc:	3f ef       	ldi	r19, 0xFF	; 255
		if(PINC == 0x3E) {
			PORTD = 0x04;
			OCR0 = 0x00;
		}
		else if(PINC == 0x3D) {
			PORTD = 0x08;
  de:	28 e0       	ldi	r18, 0x08	; 8
			OCR0 = 0x40;
  e0:	90 e4       	ldi	r25, 0x40	; 64
	PORTC = 0x3F;
	PORTD = 0x00;

	while(1) {

		if(PINC == 0x3E) {
  e2:	83 b3       	in	r24, 0x13	; 19
  e4:	8e 33       	cpi	r24, 0x3E	; 62
  e6:	19 f4       	brne	.+6      	; 0xee <main+0x30>
			PORTD = 0x04;
  e8:	52 bb       	out	0x12, r21	; 18
			OCR0 = 0x00;
  ea:	11 be       	out	0x31, r1	; 49
  ec:	fa cf       	rjmp	.-12     	; 0xe2 <main+0x24>
		}
		else if(PINC == 0x3D) {
  ee:	83 b3       	in	r24, 0x13	; 19
  f0:	8d 33       	cpi	r24, 0x3D	; 61
  f2:	19 f4       	brne	.+6      	; 0xfa <main+0x3c>
			PORTD = 0x08;
  f4:	22 bb       	out	0x12, r18	; 18
			OCR0 = 0x40;
  f6:	91 bf       	out	0x31, r25	; 49
  f8:	f4 cf       	rjmp	.-24     	; 0xe2 <main+0x24>

		}
		else if(PINC == 0x3B) {
  fa:	83 b3       	in	r24, 0x13	; 19
  fc:	8b 33       	cpi	r24, 0x3B	; 59
  fe:	89 f7       	brne	.-30     	; 0xe2 <main+0x24>
			PORTD = 0x10;
 100:	42 bb       	out	0x12, r20	; 18
			OCR0 = 0xFF;
 102:	31 bf       	out	0x31, r19	; 49
 104:	ee cf       	rjmp	.-36     	; 0xe2 <main+0x24>

00000106 <init_PWM>:

}

void init_PWM(void) {
	
	DDRB = 0xF0;
 106:	80 ef       	ldi	r24, 0xF0	; 240
 108:	87 bb       	out	0x17, r24	; 23
	
	TCCR0 = 0x6F;
 10a:	8f e6       	ldi	r24, 0x6F	; 111
 10c:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0xFF;
 10e:	8f ef       	ldi	r24, 0xFF	; 255
 110:	82 bf       	out	0x32, r24	; 50
	OCR0 = 0x00;
 112:	11 be       	out	0x31, r1	; 49

}
 114:	08 95       	ret

00000116 <_exit>:
 116:	f8 94       	cli

00000118 <__stop_program>:
 118:	ff cf       	rjmp	.-2      	; 0x118 <__stop_program>
